version: '3.7'

networks:
  web_declaraciones:
    ipam:
      config:
        - subnet: 192.168.156.0/24
volumes:
  datavolume:

services:
  db:
    image: mariadb
    container_name: declaraciones_db
    restart: always
    ports:
      - 3306
    env_file:
      - .env
    environment:
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-declaracionespass}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-declaracionesroot}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-declaracionesdb}
      - MYSQL_USER=${MYSQL_USER:-declaracionesus}
    restart: always
    volumes:
      - ./db/scripts/declaraciones_mysql.cnf:/etc/mysql/conf.d/docker.cnf
      - ./db/declaraciones/data:/var/lib/mysql
    networks:
      web_declaraciones:
        ipv4_address: 192.168.156.2

  nginx:
    image: nginx:alpine
    volumes:
      - ./serv_proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./serv_proxy/conf:/etc/nginx/conf.d
      - ./declaraciones/staticfiles:/django_static
      - ./declaraciones/media:/django_media
    ports:
      - "80:80"
    restart: always
    depends_on:
      - declaraciones
    networks:
      web_declaraciones:
        ipv4_address: 192.168.156.4

  redis:
    container_name: declaraciones_cache
    image: redis:alpine
    ports:
      - 6379
    restart: always
    networks:
      web_declaraciones:
        ipv4_address: 192.168.156.3

  declaraciones:
    container_name: declaraciones_django
    build: .
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: []
    command: >
      bash -c "echo .......... &&
            sleep 20s &&
            sh -c "/wait" &&
            pip install --upgrade pip &&
            pip install -r requirements.txt &&
            echo ...................................... loaddata &&
            uwsgi --ini uwsgi.ini"
    working_dir: /code/declaraciones
    restart: always
    volumes:
      - .:/code
    expose:
      - "8000"
    networks:
      web_declaraciones:
        ipv4_address: 192.168.156.5
